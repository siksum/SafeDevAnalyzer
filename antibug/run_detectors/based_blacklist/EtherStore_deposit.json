{
  "target": [
    {
      "filename": "ex.sol",
      "contract": "EtherStore",
      "fname": "deposit"
    }
  ],
  "similarity": [
    {
      "vulneability_type": "reentrancy",
      "severity": "high",
      "path": "lending/EtherStore.sol",
      "code": "```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ncontract EtherStore {\n    mapping(address => uint) public balances;\n\n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw() public {\n        uint bal = balances[msg.sender];\n        require(bal > 0);\n\n        (bool sent, ) = msg.sender.call{value: bal}(\"\");\n        require(sent, \"Failed to send Ether\");\n\n        balances[msg.sender] = 0;\n    }\n\n    // Helper function to check the balance of this contract\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n```",
      "contract": "EtherStore",
      "function": "deposit",
      "score": 1.0
    }
  ]
}