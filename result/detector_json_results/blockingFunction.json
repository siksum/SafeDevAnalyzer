{
  "success": true,
  "error": null,
  "results": {
    "filename": "/Users/sikk/Desktop/Antibug/SafeDevAnalyzer/test/detector/incorrect-return/blockingFunction.sol",
    "detector": "incorrect-return",
    "impact": "High",
    "confidence": "Medium",
    "element": [
      {
        "type": "function",
        "name": "foo",
        "line": 14,
        "code": "    function foo() public pure returns(bool) {\n",
        "parent_type": "contract",
        "parent_name": "Foo"
      },
      {
        "type": "function",
        "name": "blockingFunction",
        "line": 5,
        "code": "    function blockingFunction() public pure returns (bool) {\n",
        "parent_type": "contract",
        "parent_name": "Bar"
      },
      {
        "type": "node",
        "name": "return(uint256,uint256)(0,0x20)",
        "line": 7,
        "code": "            return(0,0x20)\n",
        "parent_type": "function",
        "parent_name": "blockingFunction"
      }
    ],
    "info_korean": "함수 foo가 함수 blockingFunction를 호출하면, EXPRESSION return(uint256,uint256)(0,0x20)으로 인해 실행 흐름이 중단됩니다.\n",
    "description_korean": "inline assembly block에 return이 사용되면 예기치 않은 실행 흐름이 중단될 수 있습니다.",
    "exploit_scenario_korean": "\n```solidity\n    contract C {\n        function f() internal returns (uint a, uint b) {\n            assembly {\n                return (5, 6)\n            }\n        }\n\n        function g() returns (bool){\n            f();\n            return true;\n        }\n    }\n```\nf 함수의 return 문은 g 함수의 실행을 중단시킵니다.\ng 함수를 호출하여 true 값을 반환할 것을 기대했으나 f 함수에서 5번째 offset부터 6바이트를 반환한 뒤 실행이 중단됩니다.",
    "recommendation_korean": "0.6.0 이상 버전부터 leave 키워드가 등장하였습니다. 만약 이전 버전을 사용한다면, 0.6.0 이상 버전으로 변경한 후, solidity의 leave 문을 사용하세요.",
    "reference": "https://blog.ethereum.org/2019/12/03/ef-supported-teams-research-and-development-update-2019-pt-2#solidity-060:~:text=Add%20%22leave%22%20statement%20to%20Yul%20/%20Inline%20Assembly%20to%20return%20from%20current%20function"
  }
}